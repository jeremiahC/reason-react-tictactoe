// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Cells = require("./cells.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Indicator = require("./indicator.bs.js");
var Model_board = require("./model_board.bs.js");

function Board(Props) {
  var match = React.useReducer(Model_board.State[/* moveReducer */1], Model_board.State[/* initial_state */0]);
  var dispatch = match[1];
  var state = match[0];
  var handleClick = function (e) {
    e.preventDefault();
    var element = e.target;
    var position_000 = element.parentNode.id;
    var position_001 = element.id;
    var position = /* tuple */[
      position_000,
      position_001
    ];
    var match = state[/* turn */0];
    if (match) {
      return Curry._1(dispatch, /* Marked */[
                  /* Cross */1,
                  position
                ]);
    } else {
      return Curry._1(dispatch, /* Marked */[
                  /* Circle */0,
                  position
                ]);
    }
  };
  var indicator = function (param) {
    var match = state[/* status */2];
    switch (match) {
      case 0 : 
          return React.createElement(Indicator.make, {
                      status: "Draw"
                    });
      case 1 : 
          return React.createElement(Indicator.make, {
                      status: "Winner is Player: " + state[/* winner */3]
                    });
      case 2 : 
          return React.createElement(Indicator.make, {
                      status: "Ongoing"
                    });
      
    }
  };
  var board = $$Array.mapi((function (index, item) {
          return React.createElement("div", {
                      id: String(index)
                    }, React.createElement(Cells.make, {
                          row: item,
                          event: handleClick,
                          status: state[/* winner */3],
                          key: String(index)
                        }));
        }), state[/* move */1]);
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "board"
                }, board), React.createElement("div", {
                  className: "inicator"
                }, indicator(/* () */0)));
}

var make = Board;

exports.make = make;
/* Cells Not a pure module */
