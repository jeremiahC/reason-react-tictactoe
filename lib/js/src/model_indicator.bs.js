// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

var Status = /* module */[];

function checker(cells, state) {
  var pattern1_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 0);
  var pattern1_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 1);
  var pattern1_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 2);
  var pattern1 = /* tuple */[
    pattern1_000,
    pattern1_001,
    pattern1_002
  ];
  var pattern2_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 0);
  var pattern2_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 1);
  var pattern2_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 2);
  var pattern2 = /* tuple */[
    pattern2_000,
    pattern2_001,
    pattern2_002
  ];
  var pattern3_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 0);
  var pattern3_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 1);
  var pattern3_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 2);
  var pattern3 = /* tuple */[
    pattern3_000,
    pattern3_001,
    pattern3_002
  ];
  var pattern4_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 0);
  var pattern4_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 0);
  var pattern4_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 0);
  var pattern4 = /* tuple */[
    pattern4_000,
    pattern4_001,
    pattern4_002
  ];
  var pattern5_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 1);
  var pattern5_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 1);
  var pattern5_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 1);
  var pattern5 = /* tuple */[
    pattern5_000,
    pattern5_001,
    pattern5_002
  ];
  var pattern6_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 2);
  var pattern6_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 2);
  var pattern6_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 2);
  var pattern6 = /* tuple */[
    pattern6_000,
    pattern6_001,
    pattern6_002
  ];
  var pattern7_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 0);
  var pattern7_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 1);
  var pattern7_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 2);
  var pattern7 = /* tuple */[
    pattern7_000,
    pattern7_001,
    pattern7_002
  ];
  var pattern8_000 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 0), 2);
  var pattern8_001 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 1), 1);
  var pattern8_002 = Caml_array.caml_array_get(Caml_array.caml_array_get(cells, 2), 0);
  var pattern8 = /* tuple */[
    pattern8_000,
    pattern8_001,
    pattern8_002
  ];
  if (Caml_obj.caml_equal(pattern1, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern1, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern2, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern2, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern3, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern3, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern4, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern4, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern5, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern5, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern6, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern6, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern7, /* tuple */[
          "X",
          "X",
          "X"
        ]) || Caml_obj.caml_equal(pattern7, /* tuple */[
          "O",
          "O",
          "O"
        ]) || Caml_obj.caml_equal(pattern8, /* tuple */[
          "X",
          "X",
          "X"
        ])) {
    return true;
  } else {
    return Caml_obj.caml_equal(pattern8, /* tuple */[
                "O",
                "O",
                "O"
              ]);
  }
}

var Game = /* module */[/* checker */checker];

function reducer(state, cells) {
  var match = checker(cells, state);
  if (match) {
    return /* record */[/* status : Winner */1];
  } else {
    return /* record */[/* status : Draw */0];
  }
}

var State_000 = /* initial_state : record */[/* status : Ongoing */2];

var State = /* module */[
  State_000,
  /* reducer */reducer
];

exports.Status = Status;
exports.Game = Game;
exports.State = State;
/* No side effect */
